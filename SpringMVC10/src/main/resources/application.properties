# Spring Boot 환경설정하는 파일(DB, Tomcat 등)

# Tomcat Server Port 변경
server.port=8081

# Context Path 수정 
# Context Path 수정하지 않으면 기본 Context Path -> /
# Context Path -> /boot 로 변경한다.

server.servlet.context-path=/boot

# DB 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/com
spring.datasource.username=com
spring.datasource.password=com01

# Spring JPA 설정 (JDBC -> API) -> Hibernate(Spring JPA 구현체)
# Spring 에서는 Mapper InterFace -> SqlSessionFactoryBean 이 추상메서드를 구현해주면? 개발자가 SQL 문을 작성했다.
# Spring JPA 에서는 Hibernate : SQL Query 빌드 (자동생성)
# 사용예시
# Jpa클래스.save(vo) -> insert 쿼리 문, update 쿼리 문을 자동으로 생성한다.
# 복잡한 쿼리는 직접 작성해야 한다. 간단한 SQL 문 작성을 알아서 해주는 장점이 있다.

# JPA/Hibernate -> ORM(Object Relational Mapping) 방식 : 객체 관계 맴핑

# JPA 설정
# MySQL 상세지정
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
# 스키마 생성(create,update)
spring.jpa.hibernate.ddl-auto=update
# JPA가 실행되고 실행된 SQL 문장 보기
spring.jpa.show-sql=true
# 실제 JPA 구현체인 Hibernate가 동작하면서 발생하는 SQL을 포맷팅해서 출력
spring.jpa.properties.hibernate.format_sql=true

# Spring Boot ViewResolver 설정
spring.mvc.view.prefix=/WEB-INF/board/
spring.mvc.view.suffix=.jsp




